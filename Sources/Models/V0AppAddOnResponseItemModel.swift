//
// Generated by SwagGen
// https://github.com/yonaskolb/SwagGen
//

import Foundation

public class V0AppAddOnResponseItemModel: APIModel {

    public var documentationURL: String?

    public var hasUi: Bool?

    public var icon: String?

    public var id: String?

    public var plan: AddonsPlan?

    public var summary: String?

    public var title: String?

    public init(documentationURL: String? = nil, hasUi: Bool? = nil, icon: String? = nil, id: String? = nil, plan: AddonsPlan? = nil, summary: String? = nil, title: String? = nil) {
        self.documentationURL = documentationURL
        self.hasUi = hasUi
        self.icon = icon
        self.id = id
        self.plan = plan
        self.summary = summary
        self.title = title
    }

    public required init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: StringCodingKey.self)

        documentationURL = try container.decodeIfPresent("documentation_url")
        hasUi = try container.decodeIfPresent("has_ui")
        icon = try container.decodeIfPresent("icon")
        id = try container.decodeIfPresent("id")
        plan = try container.decodeIfPresent("plan")
        summary = try container.decodeIfPresent("summary")
        title = try container.decodeIfPresent("title")
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StringCodingKey.self)

        try container.encodeIfPresent(documentationURL, forKey: "documentation_url")
        try container.encodeIfPresent(hasUi, forKey: "has_ui")
        try container.encodeIfPresent(icon, forKey: "icon")
        try container.encodeIfPresent(id, forKey: "id")
        try container.encodeIfPresent(plan, forKey: "plan")
        try container.encodeIfPresent(summary, forKey: "summary")
        try container.encodeIfPresent(title, forKey: "title")
    }

    public func isEqual(to object: Any?) -> Bool {
      guard let object = object as? V0AppAddOnResponseItemModel else { return false }
      guard self.documentationURL == object.documentationURL else { return false }
      guard self.hasUi == object.hasUi else { return false }
      guard self.icon == object.icon else { return false }
      guard self.id == object.id else { return false }
      guard self.plan == object.plan else { return false }
      guard self.summary == object.summary else { return false }
      guard self.title == object.title else { return false }
      return true
    }

    public static func == (lhs: V0AppAddOnResponseItemModel, rhs: V0AppAddOnResponseItemModel) -> Bool {
        return lhs.isEqual(to: rhs)
    }
}
